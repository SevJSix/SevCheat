buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://plugins.gradle.org/m2' }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'me.impurity'
version = 'v1.1-BETA'
archivesBaseName = 'SevCheat'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false
}

jar.manifest.attributes(
        'FMLCorePluginContainsFMLMod': true,
        'FMLCorePlugin': 'me.impurity.sevcheat.mixin.MixinLoader',
        'ForceLoadAsMod': true,
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
)


repositories {
    jcenter()
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
    maven { url = 'https://jitpack.io'}
}

dependencies {
    compile ('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

mixin {
    add sourceSets.main, 'mixins.sevcheat.refmap.json'
}

shadowJar {

    dependencies {
        include(dependency('org.spongepowered:mixin:0.7.11-SNAPSHOT'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = ''
}
build.dependsOn(shadowJar)

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
